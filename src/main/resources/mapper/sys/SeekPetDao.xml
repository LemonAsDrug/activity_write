<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chong.activity_write.mapper.SeekPetMapper">

    <select id="getSeekPetById" resultType="com.example.chong.activity_write.entity.SeekPet">
        select * from seek_pet where id = #{idxml}
    </select>

    <insert id="insertSeekPet" parameterType="com.example.chong.activity_write.entity.SeekPet">
	    INSERT INTO seek_pet(money,comment_num	,age)VALUES (
	      #{money},
	      #{commentNum},
	      #{age}
	    )
-- 	    使用xml写sql语句时，抽象父类的status,createTime属性一定程度上会失效
-- 		要在生效，要在sql语句里写上这两个属性的初始值。
-- 		就算传整个实体类作为参数，也受限于写的sql语句。
	</insert>

	<update id="updateSeekPetById" parameterType="com.example.chong.activity_write.entity.SeekPet">
		update seek_pet set detail = #{detail},browse_num = #{browseNum}
		where id = #{id}
	</update>
	
	<delete id="deleteSeekPetById" parameterType="com.example.chong.activity_write.entity.SeekPet">
		delete from seek_pet where id = #{deleteId}
-- 		sql删除语句直接无视逻辑删除字段status。即是优先级大于mybatisPlus的逻辑删除字段
	</delete>

<!--	xml写sql语句，返回泛型数组时，返回值类型写泛型的实体类就可以了，-->
	<select id="getSeekPetList" resultType="com.example.chong.activity_write.entity.SeekPet">
		select * from seek_pet
	</select>
</mapper>
